# Байт-компилированные/оптимизированные/DLL-файлы
__pycache__ /
* .py [ код ]
* $py.класс

# Расширения C
* .so

# Распространение/упаковка
.Питон
построить /
развивать-яйца /
расстояние /
загрузки /
яйца /
.яйца /
библиотека /
библиотека64 /
части /
срасст /
вар /
колеса /
поделиться / питон-колеса /
* .яйцо-информация /
.установлено.cfg
* .яйцо
МАНИФЕСТ

# PyInstaller
#   Обычно эти файлы пишутся скриптом python из шаблона
#   до того, как PyInstaller создаст исполняемый файл, чтобы добавить в него дату/другую информацию.
* .манифест
* .спецификация

# Логи установщика
пип-log.txt
pip-delete-this-directory.txt

# Модульные тесты / отчеты о покрытии
htmlcov /
.токс /
.нокс /
.покрытие
.покрытие. *
.кэш
носовые тесты.xml
покрытие.xml
* .обложка
* .ру, обложка
.гипотеза /
.pytest_cache /
обложка /

# Переводы
* .мо
* .горшок

# Материал Джанго:
* .лог
local_settings.py
db.sqlite3
db.sqlite3-журнал

# Фляга:
экземпляр /
.webassets-кэш

# Парсер:
.скрейпи

# документация по сфинксу
документы / _сборка /

# Пибилдер
.pybuilder /
цель /

# Блокнот Юпитер
.ipynb_checkpoints

# IPython
профиль_по умолчанию /
ipython_config.py

# пиенв
#    Для библиотеки или пакета вы можете игнорировать эти файлы, так как код
#    предназначен для работы в нескольких средах; в противном случае зарегистрируйте их:
# .python-версия

# пипенв
#    Согласно pypa/pipenv#598, рекомендуется включать Pipfile.lock в систему контроля версий.
#    Тем не менее, в случае совместной работы, если есть зависимости от конкретной платформы или зависимости
#    не имея кросс-платформенной поддержки, pipenv может устанавливать зависимости, которые не работают или не работают
#    устанавливаем все необходимые зависимости.
# Pipfile.lock

# поэзия
#    Как и в случае с Pipfile.lock, обычно рекомендуется включать в систему контроля версий поэзию.
#    Это особенно рекомендуется для бинарных пакетов, чтобы обеспечить воспроизводимость, и более
#    обычно игнорируется для библиотек.
#    https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
# поэзия.замок

# пдм
#    Как и в случае с Pipfile.lock, обычно рекомендуется включать pdm.lock в систему контроля версий.
# pdm.lock
#    pdm хранит конфигурации всего проекта в .pdm.toml, но не рекомендуется его включать
#    в системе контроля версий.
#    https://pdm.fming.dev/#use-with-ide
.pdm.toml

# ПЭП 582; используется, например, github.com/David-OConnor/pyflow и github.com/pdm-project/pdm
__pypackages__ /

# Сельдерей
celerybeat-график
celerybeat.pid

# файлы, проанализированные SageMath
* .sage.py

# Среды
.env
.venv
окр /
Венв /
ENV /
окр.бак /
venv.bak /

# Настройки проекта Spyder
.spyderproject
.spyproject

# Настройки проекта веревки
.ropeproject

# документация mkdocs
/ сайт

# mypy
.mypy_cache /
.dmypy.json
dmypy.json

# Проверка типа костра
.pyre /

# анализатор статического типа pytype
.pytype /

# Символы отладки Cython
cython_debug /

# PyCharm
#   Специальный шаблон JetBrains хранится в отдельном файле JetBrains.gitignore, который может
#   можно найти по адресу https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore.
#   и может быть добавлен в глобальный gitignore или объединен в этот файл. Для более ядерной
#   опция (не рекомендуется) вы можете раскомментировать следующее, чтобы игнорировать всю папку с идеями.
# .идея/